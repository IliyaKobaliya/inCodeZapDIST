{"version":3,"sources":["Search-app/Search-app.js","ClientsList-app/ClientsList-app.js","ClientInfo-app/ClientInfo-app.js","reducer/redux.js","index.js"],"names":["Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","props","onClickBTN","searchInput","value","testStore","_this2","react_default","a","createElement","Grid_default","className","container","id","direction","justify","alignItems","item","xs","placeholder","type","ref","input","onClick","giveStore","bind","Component","connect","state","action","text","store","map","ThisClient","general","firstName","includes","lastName","show","payload","ClientsList","clients","client","key","address","zipCode","onActiveClient","src","avatar","alt","job","title","ClientsInfo","personInfo","concat","company","street","city","country","contact","email","phone","lg","initialState","Clients","Static","createStore","arguments","length","undefined","toConsumableArray","ReactDOM","render","es","sm","Search_app","ClientsList_app","ClientInfo_app","document","getElementById"],"mappings":"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","file":"static/js/main.a56df9c9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './Search_Style.css';\r\n\r\n\r\nclass Search extends Component {\r\n    constructor() {\r\n        super();\r\n        this.name = 'Search'\r\n    }\r\n\r\n    giveStore() {\r\n        // console.log('findStore', this.searchInput.value);\r\n        this.props.onClickBTN(this.searchInput.value, this.props.testStore)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid  className={\"animated slideInDown fast\"} container id={'Search'} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={11} id={'search_div'}>\r\n                    <input placeholder={'Search...'} id={'search_input'} type=\"text\" ref={(input) => {\r\n                        this.searchInput = input\r\n                    }}/>\r\n                    <button id={'search_btn'} onClick={this.giveStore.bind(this)}><i className=\"fas fa-search big\"/></button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        testStore: state[0],\r\n    }),\r\n    action => ({\r\n        onClickBTN: (text, store) => {\r\n            store.map(ThisClient => (!ThisClient.general.firstName.includes(text) && !ThisClient.general.lastName.includes(text)) ? ThisClient.general.show = false : ThisClient.general.show = true);\r\n            action({type: 'AddList', payload: [store]})\r\n        }\r\n    })\r\n)(Search)\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './ClientsList_Style.css';\r\nimport {connect} from 'react-redux'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass ClientsList extends Component {\r\n    render() {\r\n        this.clients = this.props.testStore[0].map((client) => {\r\n            if (client.general.show) {\r\n                return (\r\n                    <Grid key={client.address.zipCode} container direction={'row'} className={'clients_container animated slideInDown fast' }\r\n                          onClick={() => this.props.onActiveClient(client)}>\r\n                        <Grid item xs={4}  className={'Small_avatar'}>\r\n                            <img src={client.general.avatar} alt=\"avatar\"/>\r\n                        </Grid>\r\n                        <Grid item xs={8}  className={'Personal_info'}>\r\n                            <span className={'text nameList'}>{client.general.firstName} {client.general.lastName}</span>\r\n                            <span className={'text jobList'}>{client.job.title}</span>\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            }\r\n            else {\r\n                return false\r\n            }\r\n        });\r\n        return (\r\n            <Grid container>\r\n                {this.clients}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        testStore: state\r\n    }),\r\n    action => ({\r\n        onActiveClient: (client) => {\r\n            action({type: 'AddActive', payload: client});\r\n        }\r\n    })\r\n)(ClientsList)\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './ClientInfo_Style.css';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass ClientsInfo extends Component {\r\n    render() {\r\n        this.personInfo = {\r\n            avatar: `${this.props.testStore.general.avatar}`,\r\n            name: `${this.props.testStore.general.firstName} ${this.props.testStore.general.lastName}`,\r\n            job: `${this.props.testStore.job.title} ( ${this.props.testStore.job.company} )`,\r\n            address: {\r\n                street: `${this.props.testStore.address.street}`,\r\n                city: `${this.props.testStore.address.city}`,\r\n                zipCode: `${this.props.testStore.address.zipCode}`,\r\n                country: `${this.props.testStore.address.country}`\r\n            },\r\n            contact: {\r\n                email: `${this.props.testStore.contact.email}`,\r\n                phone: `${this.props.testStore.contact.phone}`\r\n            }\r\n        };\r\n        return (\r\n            <Grid container id={'Clients_Info'}>\r\n                 <Grid item xs={12} lg={4} id={'Client_avatar_img'} className={\"animated slideInDown fast\"}>\r\n                     <img src={this.personInfo.avatar} alt=\"Avatar\"/>\r\n                 </Grid>\r\n                 <Grid item xs={12} lg={8} id={'Client_text'} className={\"animated slideInDown fast\"}>\r\n                     <div id={'personalInfo'}>\r\n                         <h1>{this.personInfo.name}</h1>\r\n                         <div className={'info_container'}><b>Job :</b>\r\n                             <div className={'Info_list list_df'}>\r\n                                 <span className={'infoItem'}>{this.personInfo.job}</span>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                     <div id={'otherInfo'}>\r\n                         <div className={'info_container'}><b>Address :</b>\r\n                             <div className={'Info_list list_df'}>\r\n                                 <span>1) Street: {this.personInfo.address.street}</span>\r\n                                 <span>2) City: {this.personInfo.address.city}</span>\r\n                                 <span>3) Zip code: {this.personInfo.address.zipCode}</span>\r\n                                 <span>4) Country: {this.personInfo.address.country}</span>\r\n                             </div>\r\n                             <div className={'info_container'}><b>Contacts :</b>\r\n                                <div className={'Info_list list_df'}>\r\n                                    <span>1) Email: {this.personInfo.contact.email}</span>\r\n                                    <span>2) Phone: {this.personInfo.contact.phone}</span>\r\n                                </div>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        testStore: state[1]\r\n    })\r\n)(ClientsInfo)","import Clients from '../clients';\r\n\r\nconst initialState = Clients;\r\nlet Static = Clients[0];    // В поле информации будет первый человек списка(Но я оставил поле пустым)\r\n// let Static = {\r\n//     \"general\": {\r\n//         \"firstName\": \"\",\r\n//         \"lastName\": \"\",\r\n//         \"avatar\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTc41Jg0v9kpaxH_0BoMVnjqgTKU7_PrtQyol0nlznXkflTM6lw\",\r\n//         \"show\": true\r\n//     },\r\n//     \"job\": {\r\n//         \"company\": \"\",\r\n//         \"title\": \"\"\r\n//     },\r\n//     \"contact\": {\r\n//         \"email\": \"\",\r\n//         \"phone\": \"\"\r\n//     },\r\n//     \"address\": {\r\n//         \"street\": \"\",\r\n//         \"city\": \"\",\r\n//         \"zipCode\": \"\",\r\n//         \"country\": \"\"\r\n//     }\r\n// };\r\n\r\nexport default function findStore(state = [initialState, Static], action) {\r\n    if (action.type === 'AddList') {\r\n        return state = [...action.payload, Static];\r\n    }\r\n    if (action.type === 'AddActive') {\r\n        return state = [initialState, action.payload];\r\n\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Grid from '@material-ui/core/Grid';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux'\nimport './Style.css';\nimport Search from './Search-app/Search-app';\nimport ClientsList from './ClientsList-app/ClientsList-app';\nimport ClientsInfo from './ClientInfo-app/ClientInfo-app'\nimport findStore from './reducer/redux';\n\nconst store = createStore(findStore);\n\nconst HTML = () => {\n    return (\n        <Provider store={store}>\n        <Grid container>\n            <Grid item key={'left'} className={'left'} xs={12} sm={4}>\n                <Grid item className={'search'}><Search/></Grid>\n                <Grid item className={'clientsList'}><ClientsList/></Grid>\n            </Grid>\n            <Grid item key={'right'} className={'right'} xs={12} sm={8}>\n                <Grid item xs={12}><ClientsInfo/></Grid>\n            </Grid>\n        </Grid>\n        </Provider>\n    )\n};\n\nReactDOM.render(<HTML/>, document.getElementById('root'));\n\n"],"sourceRoot":""}